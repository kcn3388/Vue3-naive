"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vue_1 = require("vue");
const _mixins_1 = require("../../../_mixins");
const icon_switch_transition_1 = require("../../icon-switch-transition");
const index_cssr_1 = require("./styles/index.cssr");
exports.default = vue_1.defineComponent({
    name: 'BaseLoading',
    props: {
        clsPrefix: {
            type: String,
            required: true
        },
        scale: {
            type: Number,
            default: 1
        },
        radius: {
            type: Number,
            default: 100
        },
        strokeWidth: {
            type: Number,
            default: 28
        },
        stroke: {
            type: String,
            default: undefined
        },
        show: {
            type: Boolean,
            default: true
        }
    },
    setup(props) {
        _mixins_1.useStyle('BaseLoading', index_cssr_1.default, vue_1.toRef(props, 'clsPrefix'));
    },
    render() {
        const { clsPrefix } = this;
        return (vue_1.h("div", { class: `${clsPrefix}-base-loading`, style: { stroke: this.stroke }, role: "img", "aria-label": "loading" },
            vue_1.h(icon_switch_transition_1.default, null, {
                default: () => this.show ? (vue_1.h("svg", { key: "loading", class: `${clsPrefix}-base-loading-circular ${clsPrefix}-base-loading__icon`, viewBox: `0 0 ${(this.radius * 2) / this.scale} ${(this.radius * 2) / this.scale}` },
                    vue_1.h("circle", { style: { strokeWidth: this.strokeWidth }, class: `${clsPrefix}-base-loading-circular-path`, cx: this.radius / this.scale, cy: this.radius / this.scale, fill: "none", r: this.radius - this.strokeWidth / 2 }))) : (vue_1.h("div", { key: "placeholder", class: `${clsPrefix}-base-loading__placeholder` }, this.$slots))
            })));
    }
});
