"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vue_1 = require("vue");
const ImagePreview_1 = require("./ImagePreview");
const ImageGroup_1 = require("./ImageGroup");
const _mixins_1 = require("../../_mixins");
const imageProps = {
    width: [String, Number],
    height: [String, Number],
    src: String,
    showToolbar: { type: Boolean, default: true }
};
exports.default = vue_1.defineComponent({
    name: 'Image',
    props: imageProps,
    setup(props) {
        const imageRef = vue_1.ref(null);
        const previewInstRef = vue_1.ref(null);
        const imageGroupHandle = vue_1.inject(ImageGroup_1.imageGroupInjectionKey, null);
        const { mergedClsPrefixRef } = imageGroupHandle || _mixins_1.useConfig(props);
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId,
            previewInstRef,
            imageRef,
            handleClick: () => {
                if (imageGroupHandle) {
                    imageGroupHandle.setPreviewSrc(props.src);
                    imageGroupHandle.setThumbnailEl(imageRef.value);
                    imageGroupHandle.toggleShow();
                    return;
                }
                const { value: previewInst } = previewInstRef;
                if (!previewInst)
                    return;
                previewInst.setPreviewSrc(props.src);
                previewInst.setThumbnailEl(imageRef.value);
                previewInst.toggleShow();
            }
        };
    },
    render() {
        const { mergedClsPrefix } = this;
        return this.groupId ? (vue_1.h("div", { class: `${mergedClsPrefix}-image` },
            vue_1.h("img", { class: this.groupId, ref: "imageRef", width: this.width, height: this.height, src: this.src, onClick: this.handleClick }))) : (vue_1.h(ImagePreview_1.default, { clsPrefix: mergedClsPrefix, ref: "previewInstRef", showToolbar: this.showToolbar }, {
            default: () => {
                return (vue_1.h("div", { class: `${mergedClsPrefix}-image` },
                    vue_1.h("img", { ref: "imageRef", width: this.width, height: this.height, src: this.src, onClick: this.handleClick })));
            }
        }));
    }
});
