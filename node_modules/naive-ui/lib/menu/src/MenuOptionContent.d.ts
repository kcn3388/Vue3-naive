import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    collapsed: BooleanConstructor;
    disabled: BooleanConstructor;
    title: (StringConstructor | FunctionConstructor)[];
    icon: FunctionConstructor;
    extra: (StringConstructor | FunctionConstructor)[];
    showArrow: BooleanConstructor;
    childActive: BooleanConstructor;
    hover: BooleanConstructor;
    paddingLeft: NumberConstructor;
    maxIconSize: {
        type: NumberConstructor;
        required: true;
    };
    activeIconSize: {
        type: NumberConstructor;
        required: true;
    };
    iconMarginRight: {
        type: NumberConstructor;
        required: true;
    };
    clsPrefix: {
        type: StringConstructor;
        required: true;
    };
    onClick: PropType<(e: MouseEvent) => void>;
}, {
    style: import("vue").ComputedRef<{
        paddingLeft: string | 0 | undefined;
    }>;
    iconStyle: import("vue").ComputedRef<{
        width: string;
        height: string;
        fontSize: string;
        marginRight: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled: boolean;
    hover: boolean;
    clsPrefix: string;
    showArrow: boolean;
    childActive: boolean;
    collapsed: boolean;
    maxIconSize: number;
    activeIconSize: number;
    iconMarginRight: number;
} & {
    extra?: string | Function | undefined;
    icon?: Function | undefined;
    onClick?: ((e: MouseEvent) => void) | undefined;
    title?: string | Function | undefined;
    paddingLeft?: number | undefined;
}>, {
    disabled: boolean;
    hover: boolean;
    showArrow: boolean;
    childActive: boolean;
    collapsed: boolean;
}>;
export default _default;
