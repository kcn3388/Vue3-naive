import { PropType } from 'vue';
import { ExtractPublicPropTypes } from '../../_utils';
declare const imageProps: {
    width: PropType<string | number>;
    height: PropType<string | number>;
    src: StringConstructor;
    showToolbar: {
        type: BooleanConstructor;
        default: boolean;
    };
};
export declare type ImageProps = ExtractPublicPropTypes<typeof imageProps>;
declare const _default: import("vue").DefineComponent<{
    width: PropType<string | number>;
    height: PropType<string | number>;
    src: StringConstructor;
    showToolbar: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    mergedClsPrefix: import("vue").Ref<string> | import("vue").ComputedRef<string>;
    groupId: string | undefined;
    previewInstRef: import("vue").Ref<{
        setThumbnailEl: (e: HTMLImageElement | null) => void;
        setPreviewSrc: (src?: string | undefined) => void;
        toggleShow: () => void;
    } | null>;
    imageRef: import("vue").Ref<HTMLImageElement | null>;
    handleClick: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    showToolbar: boolean;
} & {
    height?: string | number | undefined;
    width?: string | number | undefined;
    src?: string | undefined;
}>, {
    showToolbar: boolean;
}>;
export default _default;
