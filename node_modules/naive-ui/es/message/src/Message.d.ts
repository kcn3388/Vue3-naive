import { VNodeChild } from 'vue';
import { MessageType } from './message-props';
declare const _default: import("vue").DefineComponent<{
    readonly icon: import("vue").PropType<() => VNodeChild>;
    readonly type: {
        readonly type: import("vue").PropType<MessageType>;
        readonly default: "info";
    };
    readonly content: import("vue").PropType<string | number | boolean | (() => VNodeChild)>;
    readonly closable: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
    readonly onClose: import("vue").PropType<() => void>;
}, {
    mergedClsPrefix: import("vue").Ref<string>;
    handleClose(): void;
    cssVars: import("vue").ComputedRef<{
        '--bezier': string;
        '--margin': string;
        '--padding': string;
        '--max-width': string;
        '--font-size': string;
        '--icon-margin': string;
        '--icon-size': string;
        '--close-size': string;
        '--close-margin': string;
        '--text-color': string;
        '--color': string;
        '--box-shadow': string;
        '--icon-color-info': string;
        '--icon-color-success': string;
        '--icon-color-warning': string;
        '--icon-color-error': string;
        '--icon-color-loading': string;
        '--close-color': string;
        '--close-color-pressed': string;
        '--close-color-hover': string;
        '--line-height': string;
        '--border-radius': string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    type: MessageType;
    closable: boolean;
} & {
    content?: string | number | boolean | (() => VNodeChild) | undefined;
    icon?: (() => VNodeChild) | undefined;
    onClose?: (() => void) | undefined;
}>, {
    type: MessageType;
    closable: boolean;
}>;
export default _default;
