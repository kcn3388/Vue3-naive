import { PropType } from 'vue';
import { OnLanguageChange } from './use-legacy';
declare const _default: import("vue").DefineComponent<{
    onNamespaceChange: {
        type: FunctionConstructor;
        default: undefined;
    };
    /**
     * @deprecated
     */
    onThemeChange: {
        type: FunctionConstructor;
        default: undefined;
    };
    /**
     * @deprecated
     */
    onLanguageChange: PropType<OnLanguageChange>;
}, {
    legacyTheme: import("vue").ComputedRef<string | undefined>;
    legacyLanguage: import("vue").ComputedRef<string | undefined>;
    legacyThemeEnvironment: import("vue").ComputedRef<any>;
    legacyStyleScheme: import("vue").ComputedRef<any>;
    NConfigProvider: import("../../config-provider/src/internal-interface").ConfigProviderInjection | null;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    onNamespaceChange: Function;
    onThemeChange: Function;
} & {
    onLanguageChange?: OnLanguageChange | undefined;
}>, {
    onNamespaceChange: Function;
    onThemeChange: Function;
}>;
export default _default;
